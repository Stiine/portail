#! /bin/bash

ip = `ifconfig enp0s3 | awk '/inet / {print $2}' | cut -d ':' -f2`

# Mise à jours
sudo apt update -y 
sudo apt upgrade -y
sudo apt update -y

# Serveur Apache
sudo apt install apache2
# droit pour rasp
#sudo chown -R pi:www-data /var/www/html/
#sudo chmod -R 770 /var/www/html/

# Php
sudo apt install php php-mbstring

# Mysql
sudo apt install mysql-server
# Pour rasp : sudo apt install mariadb-server php-mysql
# Connection
sudo mysql --user=root
# Supprimer l’utilisateur root et créer un nouvel utilisateur root, car celui p>
# Creation de l'utilisateur root
echo "sudo mysql -e 'DROP USER 'root'@'localhost''";
# On lui a ajoute un mots de passe
echo "sudo mysql -e 'CREATE USER 'root'@'localhost' IDENTIFIED BY 'Snir2020*''";
# On donne les droits suffisants
echo "sudo mysql -e 'GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPT>";
echo "exit"

# Phpmyadmin
sudo apt install phpmyadmin
# Activer l'extension mysqli
sudo phpenmod mysqli
sudo /etc/init.d/apache2 restart
# Placer phpmyadmin dans /var/www/html/phpmyadmin
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin

# Certificat SSL
# Mise à jours
sudo apt update
# Ouverture des ports http = 80 et https = 443
sudo ufw allow "Apache Full"
# Activation mod_ssl
sudo a2enmod ssl
# Redemarre serveur apache pour appliquer la modification
sudo systemctl restart apache2
# Création du certificat SSL
# openssl : c'est l'outil de ligne de commande utilisé pour la création et la g>
# req -x509 : gestion des demandes de signature de certificats (CSR) X.509, X.5>
# -nodes : cela indique à OpenSSL de ne pas utiliser l'option de sécurisation d>
# -days 365 : cette option fixe la durée pendant laquelle le certificat sera co>
# -newkey : un nouveau certificat et rsa:2048 lui demande de fabriquer une clé >
# -keyout : cette ligne indique à OpenSSL où placer le fichier de clé privée gé>
# -out : cela indique à OpenSSL où placer le certificat que nous créons.
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/priva>
# Configuration configuration d'Apache pour utiliser SSL
# On ouvre dans le répertoire.
sudo nano /etc/apache2/sites-available/$ip.conf
# On édite.
sed '{/motif/|/regexp/|n}{1|a|c}\<<VirtualHost *:443>>' $ip.conf
   sed '{/motif/|/regexp/|n}{2|a|c}\<ServerName $ip>' $ip.conf
   sed '{/motif/|/regexp/|n}{3|a|c}\<DocumentRoot /var/www/$ip>' $ip.conf

   sed '{/motif/|/regexp/|n}{5|a|c}\<SSLEngine on>' $ip.conf
   sed '{/motif/|/regexp/|n}{6|a|c}\<SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt>' $ip.conf
   sed '{/motif/|/regexp/|n}{7|a|c}\<SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key>' $ip.conf
   sed '{/motif/|/regexp/|n}{8|a|c}\<</VirtualHost>>' $ip.conf

sed '{/motif/|/regexp/|n}{10|a|c}\<<VirtualHost *:80>>' $ip.conf
   sed '{/motif/|/regexp/|n}{11|a|c}\<ServerName $ip>' $ip.conf
   sed '{/motif/|/regexp/|n}{12|a|c}\<Redirect / https://$ip/>' $ip.conf
sed '{/motif/|/regexp/|n}{13|a|c}\<</VirtualHost>>' $ip.conf
# Activer fichier de configuration
sudo a2ensite $ip.conf
# Test d'erreurs de configuration
sudo apache2ctl configtest
# redemarre seveur apache2
sudo systemctl reload apache2

mv html /var/www
